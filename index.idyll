[meta
  title:"Winning 3-card monte"
  description:"How your skill is irrelevant at the 3 card monte."
  shareImageUrl:"https://fredhohman.com/card-shuffling/static/images/share.png"
  shareImageWidth:"1600"
  shareImageHeight:"800" /]

[Header
  title:"Can you win 3-card monte?"
  subtitle:"How a simple card game can separate skill from probability"
  author:"Jithin George, Alex Fang, Richard Yu"
 /]

[Analytics google:"UA-42146340-1" /]


// [aside]
// Smooshing a deck is arguably more fun.
// [image style:`{width: '100%'}` src:"static/images/smoosh.gif" /]
// [/aside]

[image style:`{width: '100%'}` src:"static/images/monte.gif" /]





You walk up to a busy city corner and spot a lone street-magician with three cards on a table.  Interested, you ask him what magic could possibly come out of these cards.  
He flips over one of the cards and shows you a red queen of hearts.  

**He proposes to you that if you can keep track of this queen of hearts ([card number:"Q" suit:"H"/]) you'll win a prize.**  [br/]

Confident, you agree to the terms and in an instant he flips the cards over and shuffles the three cards multiple times, and stops, leaving you to select which card is the queen.


[aside]
[The wikipedia page](https://en.wikipedia.org/wiki/Three-card_Monte) for three-card monte commonly refers it as a "short con" where the magician would hire accomplices, or shills, to rig the game.  

This simulation aims to show how even a winning a fair game is random chance.[/aside]

**So here's the question:**
[br/]
*How relevant is skill in winning this game as the number of shuffles the magician makes increases?*

## Game Setup
In a typical setup, three cards are laid out on a table, one of which is the "money card", in this case [card number:"Q" suit:"H"/], that if kept track of rewards a prize.  

Selecting one of the other two cards means you lose your bet. 

Let's say the two loser cards are [card number:"Q" suit:"S"/], [card number:"Q" suit:"C"/], and as previously mentioned, the "money card" is the [card number:"Q" suit:"H"/].

So the game setup looks like this:

[cardVis static:"True"/]

Once you see the starting position of the cards, they are flipped over to conceal their faces.  The magician proceeds to shuffle, or swap the position of any two of the three cards, and it is the player's job to select the [card number:"Q" suit:"H"/] when he finishes.

## Theory
Skill in this game can be represented by a probability [Equation]p[/Equation] that you successfully track a shuffle of two cards.  That is, 

>the probability that you know the exact position of the winner card after the shuffle takes place.

Random equation syntax: [Equation]\frac{1}{52}+\frac{1}{52}=\frac{2}{52}[/Equation] 

Random equation display syntax:
[Equation display:true]
  \sum_{i=1}^{52} \frac{52}{i} = \frac{52}{1} + \frac{52}{2} + \frac{52}{3} + ... + \frac{52}{52} \approx 236
[/Equation]


## Let's play


[var name:"iter" value:0 /]
[var name:"flipvalue" value:0 /]
[var name:"shufflevalue" value:1 /]
[var name:"points" value:`[{x:0, y:52}]` /]
[var name:"endPoints" value:`[]` /]

[aside]
You have riffled **[Display value:iter format:"d" /]** times.
[br/]
[button onClick:`if(points[points.length-1].y !== 1){ if (flipvalue == 1){flipvalue = 0}else{flipvalue = 1}; shufflevalue = 1}`]Flip[/button]
[button onClick:`if(points[points.length-1].y !== 1){iter++;  shufflevalue = 0}`]Shuffle[/button]
[multiRiffle iter:iter points:points ]Shuffle (x10)[/multiRiffle]
[/aside]

[cardVis iterVar:iter points:points flipswitch:flipvalue shuffleswitch:shufflevalue /]
[var name:"shufflevalue" value:1 /]

Here is a chart.

[aside]
Once the [card number:"K" suit:"D"/] is the top card, click the **Clear** button to try again.
[button className:"clear" onClick:`endPoints.push([{iter:iter, position:-1}, {iter:iter, position:3}]); iter=-1; points=[{x:0, y:52}]; iter++;`]Clear[/button]
[/aside]
[positionChart iterVal:iter points:points endPoints:endPoints /]


### Acknowledgements
* This article was created using [a href:"https://idyll-lang.org/"]Idyll[/a].
* Shoutout to [a href:"https://twitter.com/mathisonian"]@mathisonian[/a] for help and feedback.
* The source code is available on [a href:"https://github.com/fredhohman/card-shuffling/"]Github[/a].