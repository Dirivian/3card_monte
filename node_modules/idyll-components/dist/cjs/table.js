'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var React = require('react');
var Table = require('react-table').default;

var TableComponent = function (_React$PureComponent) {
  _inherits(TableComponent, _React$PureComponent);

  function TableComponent() {
    _classCallCheck(this, TableComponent);

    return _possibleConstructorReturn(this, _React$PureComponent.apply(this, arguments));
  }

  TableComponent.prototype.getColumns = function getColumns() {
    if (this.props.columns) {
      if (this.props.columns.length && typeof this.props.columns[0] === 'string') {
        return this.props.columns.map(function (d) {
          return {
            Header: d,
            accessor: d
          };
        });
      }

      return this.props.columns;
    }
    if ((this.props.data || []).length) {
      return Object.keys(this.props.data[0]).map(function (d) {
        return {
          Header: d,
          accessor: d
        };
      });
    }

    return [];
  };

  TableComponent.prototype.render = function render() {
    return React.createElement(Table, _extends({
      className: 'table ' + (this.props.className || ''),
      showPagination: this.props.data.length > this.props.defaultPageSize,
      minRows: this.props.data.length <= this.props.defaultPageSize ? this.props.data.length : undefined
    }, this.props, {
      children: undefined,
      columns: this.getColumns()
    }));
  };

  return TableComponent;
}(React.PureComponent);

TableComponent.defaultProps = {
  data: [],
  showPageSizeOptions: false,
  showPageJump: false,
  defaultPageSize: 20
};

TableComponent._idyll = {
  name: "Table",
  tagType: "closed",
  props: [{
    name: "data",
    type: "array",
    example: 'x'
  }, {
    name: "showPagination",
    type: "boolean",
    example: 'false'
  }, {
    name: "showPageSizeOptions",
    type: "boolean",
    example: 'false'
  }, {
    name: "showPageJump",
    type: "boolean",
    example: 'false'
  }]
};

module.exports = TableComponent;