'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _screen = require('./utils/screen');

var _screen2 = _interopRequireDefault(_screen);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Waypoint = function (_React$PureComponent) {
  _inherits(Waypoint, _React$PureComponent);

  function Waypoint(props) {
    _classCallCheck(this, Waypoint);

    return _possibleConstructorReturn(this, _React$PureComponent.call(this, props));
  }

  Waypoint.prototype.render = function render() {
    return _react2.default.createElement(_screen2.default, _extends({ align: 'center', direction: 'row', height: '75vh' }, this.props));
  };

  return Waypoint;
}(_react2.default.PureComponent);

Waypoint._idyll = {
  name: "Waypoint",
  tagType: "open",
  props: [{
    name: "onEnterView",
    type: "event",
    example: "`x = true`"
  }]
};

exports.default = Waypoint;